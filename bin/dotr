#!/bin/bash

set -oe pipefail

# depends on having this script in the path
export DOTFILES_ROOT="${DOTFILES_ROOT:-$(command -v "$0" | xargs dirname)/..}"
cd "${DOTFILES_ROOT}"
# shellcheck source=./script/logging.sh
source "./script/logging.sh"

print_help(){
  cat <<EOF
dot -- dotfiles management

Usage: dot [options]

Default is to update the dotfiles and setup the system for work.

Options:
 -e, --edit   Open dotfiles directory for editing
 -l, --lint   Lint dotfiles
 -h, --help   Show this help message and exti
EOF
}

while test $# -gt 0; do
  case "$1" in
    "-h"|"--help") print_help;;
    "-e"|"--edit") exec e "${DOTFILES_ROOT}";;
    "-l"|"--lint") exec "${DOTFILES_ROOT}/script/lint";;
    "--no-push") NO_PUSH=true; break;;
    *) echo "Invalid option: $1"; print_help; exit 1;;
  esac
  exit 0
  shift
done

# Update
[[ -n "$(git -C "${DOTFILES_ROOT}" diff)" ]] && \
  fail "Commit the changes and try again."

[[ -z ${NO_PUSH:-} ]] && {
  info "Rebasing on master"
  git -C "${DOTFILES_ROOT}" pull --rebase
  info "Updating submodules"
  git -C "${DOTFILES_ROOT}" submodule update --recursive
  info "Pushing"
  git -C "${DOTFILES_ROOT}" push
}
info "Bootstrapping..."
"${DOTFILES_ROOT}/script/bootstrap" --overwrite
