# {{{ functions
fn trysource file
    if test -e $file; source $file; end
end

fn plugin_path name
    echo "${ION_PLUGIN}/${name}/target/release/${name}"
end

fn ensure_built name
    let exe=$(plugin_path ${name})

    if not exists $exe
        echo "PLUGIN NOT FOUND: $exe"
        echo "Building..."
        pushd "${ION_PLUGIN}/${name}"
        cargo build --release
        popd
    end
end

fn run_plugin name
    echo $($(plugin_path ${name}))
end

fn PROMPT
    let path="${c::blue}${PWD}${c::default}"
    let symbol="${c::magenta}‚ùØ${c::default}"
    let git_info=$(run_plugin git_prompt)
    echo -en "${path} ${git_info} \n${symbol} "
end

fn pubkey
    let path="${HOME}/.ssh/id_rsa.pub"

    if test $(uname -s) = "Darwin"
        cat ${path} | pbcopy
    end
    xclip -sel clip < ${path}

    echo "${path} copied to clipboard"
end
# }}}
# {{{ env
export DOTFILES="${HOME}/.dotfiles"
export ION_PLUGIN="${DOTFILES}/ion/plugins"
export EDITOR="nvim"
export GOPATH="${HOME}/gocode"
export PATH="${GOPATH}/bin:${PATH}"
export SKIM_DEFAULT_COMMAND="git ls-tree -r --name-only HEAD || rg --files || fd ."
# }}}
# {{{ aliases
alias b="bat --theme=zenburn"
alias e="${EDITOR}"
alias g="git"
alias k="kubectl"
alias se="sudo -E nvim"
alias vc="e ~/.config/nvim/init.vim"
alias x="exa"
alias xx="exa -l"
# }}}

# Load optional files, which may not be present
trysource "${HOME}/.localrc.ion"

# Ensure plugins are built
ensure_built git_prompt

# vim: filetype=ion foldmethod=marker
